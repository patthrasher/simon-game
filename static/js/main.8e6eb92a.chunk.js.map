{"version":3,"sources":["index.js"],"names":["colors","status","clickCount","score","piecesDisabled","numSequence","max","nums","i","push","Math","floor","random","getNumSequence","colorSequence","seq","colorSeq","length","getColorSequence","Game","state","turn","startDisabled","element","className","callbackFunction","setTimeout","classList","toggle","pieces","Array","from","document","querySelectorAll","scheduleAnimation","color","animate","bind","this","setState","piece","getElementById","check","onClick","reloadPage","start","slice","window","location","reload","map","id","disabled","React","Component","ReactDOM","render"],"mappings":"yNAIMA,EAAS,CAAC,QAAS,MAAO,SAAU,QACtCC,EAAS,GACTC,EAAa,EACbC,EAAQ,EACRC,GAAiB,EAuBrB,IAAIC,EAhBJ,WAEE,IADA,IALiBC,EAKbC,EAAO,GACFC,EAAE,EAAGA,GAAG,GAAIA,IACnBD,EAAKE,MAPUH,EAOK,EANfI,KAAKC,MAAMD,KAAKE,SAAWN,KAQlC,OAAOC,EAWSM,GACdC,EATJ,SAA0BC,GAExB,IADA,IAAIC,EAAW,GACNR,EAAE,EAAGA,EAAEO,EAAIE,OAAQT,IAC1BQ,EAASP,KAAKT,EAAOe,EAAIP,KAE3B,OAAOQ,EAIWE,CAAiBb,GAK/Bc,E,kDACF,aAAe,IAAD,8BACV,gBAEKC,MAAQ,CACTpB,OAAQc,EACRO,KAAM,EACNC,eAAe,GANT,E,2CAUhB,SAAQC,EAASC,EAAWC,GAC1BC,YAAW,WACTH,EAAQI,UAAUC,OAAOJ,GACzBE,YAAW,WACTH,EAAQI,UAAUC,OAAOJ,GACrBC,GACFA,MAED,OACF,O,mBAIL,SAAMV,GAAM,IAAD,OAEDc,EAASC,MAAMC,KAAKC,SAASC,iBAAiB,iBAC1B,SAApBC,EAAqB1B,GACzB,IAAMe,EAAUM,EAAOd,EAAIP,IACrB2B,EAAQ,EAAKf,MAAMpB,OAAOQ,GAC3Be,GAAWY,GACd,EAAKC,QAAQb,EAASY,EAAOD,EAAkBG,KAAK,IAAQ7B,IAGjE0B,CAAkB,GAElBI,KAAKC,SAAS,CACZjB,eAAe,IAGjBlB,GAAiB,I,kBAGpB,SAAKI,GAAI,IAAD,OACAgC,EAAQR,SAASS,eAAejC,GAEtC,IAAK8B,KAAKI,MAAMlC,EAAGN,GAOjB,OANAA,EAAa,EACboC,KAAKC,SAAS,CACZlB,KAAM,SAGRpB,EAAS,wBAAQuB,UAAU,mBAAmBmB,QAAS,kBAAM,EAAKC,cAAzD,sCAIe,WACxB,IAAMT,EAAQnC,EAAOQ,GACjB2B,GACF,EAAKC,QAAQI,EAAOL,GAGxBD,IAEAhC,GAAc,KAEKoC,KAAKlB,MAAMC,OAC5BiB,KAAKC,UAAS,SAAAnB,GAAK,MAAK,CACtBC,KAAMD,EAAMC,KAAO,MAGrBK,YAAW,WACT,EAAKmB,MAAMxC,EAAYyC,MAAM,EAAG,EAAK1B,MAAMC,SAC1C,MACHnB,EAAa,EACbC,GAAS,K,mBAKb,SAAMqC,EAAOtC,GAGX,OAFwBG,EAAYyC,MAAM,EAAGR,KAAKlB,MAAMC,MAEpCnB,KAAgBsC,I,wBAMtC,WACEO,OAAOC,SAASC,W,oBAGlB,WAAU,IAAD,OACL,OACA,sBAAKzB,UAAU,iBAAf,UACE,oBAAIA,UAAU,SAAd,+BACC,CAAC,EAAE,EAAE,EAAE,GAAG0B,KAAI,SAAC1C,GACd,OAAO,wBAAgB2C,GAAI3C,EAAGgB,UAAU,aAAamB,QAAS,kBAAM,EAAKtB,KAAKb,IAAI4C,SAAUhD,GAAxEI,MAEtB,4BAAIP,IACJ,qBAAIuB,UAAU,SAAd,oBAA+BrB,KAC/B,mBAAGqB,UAAU,SAAb,6EACA,qBAAKA,UAAU,aAAf,SACE,wBAAQmB,QAAS,kBAAM,EAAKE,MAAMxC,EAAYyC,MAAM,EAAE,EAAK1B,MAAMC,QAAQ+B,SAAUd,KAAKlB,MAAME,cAAeE,UAAU,eAAvH,iD,GAxGS6B,IAAMC,WA+GzBC,IAASC,OACL,cAACrC,EAAD,IACAa,SAASS,eAAe,W","file":"static/js/main.8e6eb92a.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nconst colors = ['green', 'red', 'yellow', 'blue'];\nlet status = '';\nlet clickCount = 0;\nlet score = 0;\nlet piecesDisabled = true;\n\n\nfunction getRandom(max) {\n  return Math.floor(Math.random() * max)\n}\n\nfunction getNumSequence() {\n  let nums = []\n  for (let i=0; i<=20; i++) {\n    nums.push(getRandom(4));\n  }\n  return nums\n}\n\nfunction getColorSequence(seq) {\n  let colorSeq = []\n  for (let i=0; i<seq.length; i++) {\n    colorSeq.push(colors[seq[i]]);\n  }\n  return colorSeq;\n}\n\nlet numSequence = getNumSequence();\nlet colorSequence = getColorSequence(numSequence);\n// console.log(numSequence);\n// console.log(colorSequence);\n\n\nclass Game extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            colors: colorSequence,\n            turn: 1,\n            startDisabled: false,\n        }\n    }\n\n  animate(element, className, callbackFunction){\n    setTimeout(() => {\n      element.classList.toggle(className);\n      setTimeout(() => {\n        element.classList.toggle(className);\n        if (callbackFunction) {\n          callbackFunction();\n        }\n      }, 300)\n    }, 500);\n  }\n\n\n  start(seq) {\n\n      const pieces = Array.from(document.querySelectorAll('.game-piece'));\n      const scheduleAnimation = (i) => {\n        const element = pieces[seq[i]];\n        const color = this.state.colors[i];\n        if ( element && color ) {\n          this.animate(element, color, scheduleAnimation.bind(this, ++i));\n        }\n      }\n     scheduleAnimation(0);\n\n     this.setState({\n       startDisabled: true,\n     });\n\n     piecesDisabled = false;\n   }\n\n  turn(i) {\n    const piece = document.getElementById(i);\n\n    if (!this.check(i, clickCount)) {\n      clickCount = 0\n      this.setState({\n        turn: 0,\n      });\n\n      status = <button className='game-over-button' onClick={() => this.reloadPage()}>GAME OVER - Try Again?</button>\n      return;\n    }\n\n    const scheduleAnimation = () => {\n      const color = colors[i];\n      if (color) {\n        this.animate(piece, color);\n      }\n    }\n    scheduleAnimation(i);\n\n    clickCount += 1;\n\n    if (clickCount === this.state.turn) {\n      this.setState(state => ({\n        turn: state.turn + 1,\n      }));\n\n      setTimeout(() => {\n        this.start(numSequence.slice(0, this.state.turn))\n      }, 1500);\n      clickCount = 0;\n      score += 1;\n    }\n  }\n\n\n  check(piece, clickCount) {\n    const correctClickSeq = numSequence.slice(0, this.state.turn);\n\n    if (correctClickSeq[clickCount] !== piece) {\n        return false;\n    }\n    return true;\n  }\n\n  reloadPage() {\n    window.location.reload();\n  }\n\n  render() {\n      return (\n      <div className=\"game-container\">\n        <h1 className='header'>Simon Memory Game</h1>\n        {[0,1,2,3].map((i) => {\n          return <button key={i} id={i} className='game-piece' onClick={() => this.turn(i)} disabled={piecesDisabled}></button>\n        })}\n        <p>{status}</p>\n        <h2 className='header'>Score: {score}</h2>\n        <p className='header'>Follow the pattern of lights by clicking the sequence in order!</p>\n        <div className='button-pad'>\n          <button onClick={() => this.start(numSequence.slice(0,this.state.turn))} disabled={this.state.startDisabled} className=\"start-button\">Start Game (you got this!)</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n  );\n"],"sourceRoot":""}